
// Moodle Database Activity Javascript Template Function
// Name: yyyymmddhhmmss prototype function
// Description: Format the date in a uniform method

Date.prototype.uniformDate = function(format_requested) {
    var yyyy = this.getFullYear().toString();
    var MM = (this.getMonth()+1).toString();
    var dd  = this.getDate().toString();
    var hh = this.getHours().toString();
    var mm = this.getMinutes().toString();
    var ss = this.getSeconds().toString();

    // Make a short day
    var weekday = new Array(7);
    weekday[0] = "Sun";
    weekday[1] = "Mon";
    weekday[2] = "Tue";
    weekday[3] = "Wed";
    weekday[4] = "Thu";
    weekday[5] = "Fri";
    weekday[6] = "Sat";
    var shortDay = weekday[this.getDay()];

    // Make a short month
    var month = new Array(12);
    month[0] = "Jan";
    month[1] = "Feb";
    month[2] = "Mar";
    month[3] = "Apr";
    month[4] = "May";
    month[5] = "Jun";
    month[6] = "Jul";
    month[7] = "Aug";
    month[8] = "Sep";
    month[9] = "Oct";
    month[10] = "Nov";
    month[11] = "Dec";
    var shortMonth = month[this.getMonth()];

    // Returns the formatted result
    switch (format_requested) {
        case 1:
            // Just the date
            return yyyy + '-' + shortMonth + '-' + (dd[1]?dd:"0"+dd[0]);
            break;
        case 2:
            // Just the time
            return (hh[1]?hh:"0"+hh[0]) + ':' + (mm[1]?mm:"0"+mm[0]);
            break;
        case 3:
            // Just the short day
            return shortDay;
            break;
    }
    return this;
}


// Moodle Database Activity Javascript Template Function
// Name: formatDates
// Description: This script takes the Moodle Database Logged dates in a list
// view and counts the number of unique dates in the array. It uses the
// document attribute LANG to determine how to format the date. The end
// result should be dates and times formatted in a uniform way no matter
// what language you are using in Moodle.

function formatDates() {
    // Formatting depends entirely on the language. As new languages are
    // making use of this script, some changes may be needed to parse the
    // date.
    var doc_lang = document.documentElement.lang;

    // Get the system log date
    var some_datesadded = document.getElementsByClassName('dateadded');
    var some_timesadded = document.getElementsByClassName('timeadded');
    var some_daysadded = document.getElementsByClassName('dayadded');

    // Get the date logged by the user
    var some_datesreported = document.getElementsByClassName('datereported');
    var some_daysreported = document.getElementsByClassName('dayreported');

    // ja 2018年 04月 12日(Thursday) 12:11 --> 2018-04-12 Thu 12:11
    // en Thursday, 12 April 2018, 12:11 PM --> 12April201812:11
    // tw 2018年 04月 12日(Thu) 12:11      --> 2018041212:11
    // cn 2018年04月12日 Thursday 12:11      --> 2018041212:11
    // ko 2018년 April 12일, Thursday, PM 12:11 --> 2018April1212:11

    //var all_replaceables = ['年','月','日','(',')',',',' ','AM','PM','년','일'];
    //var jp_replaceables = ['年','月','日','(',')'];
    //var jp_replaceables = ['年','月','日','(',')',',',' ','AM','PM','년','일'];
    //var replaceDays = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];
    //var replaceShortDays = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];

    // Parse the date array and make it display uniformly.
    for (var i=0; i<some_datesadded.length; i++) {
        var a_date = new Date(some_datesadded[i].innerHTML);
        some_datesadded[i].innerHTML = a_date.uniformDate(1);
        some_timesadded[i].innerHTML = a_date.uniformDate(2);
        some_daysadded[i].innerHTML = a_date.uniformDate(3);
        var a_date = new Date(some_datesreported[i].innerHTML);
        some_datesreported[i].innerHTML = a_date.uniformDate(1);
        some_daysreported[i].innerHTML = a_date.uniformDate(3);
    }
}
